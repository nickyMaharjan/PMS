/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pms.gui;

import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import dao.ConnectionProvider;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.Date;
import com.toedter.calendar.JDateChooser;
import common.OpenPdf;
import javax.swing.table.TableModel;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import dao.PharmacyUtils;
import java.io.FileOutputStream;
import java.text.DateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author DELL
 */
public class SellMedicine extends javax.swing.JFrame {

    public String numberPattern = "^[0-9]*$";
    private int finalTotalPrice = 0;
    private String billId = "";
    private String username = "";
    private Date clearDate = new Date();

    /**
     * Creates new form SellMedicine
     */
    public SellMedicine() {
        initComponents();
    }

    public SellMedicine(String tempUsername) {
        initComponents();
        username = tempUsername;
        setLocationRelativeTo(null);

    }

    private void medicineName(String nameOruniqueId) {
        DefaultTableModel model = (DefaultTableModel) medicineTbl.getModel();
        model.setRowCount(0);
        try {
            Connection con = ConnectionProvider.getConnection();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM medicine WHERE name LIKE '" + nameOruniqueId + "%' OR uniqueId LIKE '" + nameOruniqueId + "%'");
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("uniqueId") + "- " + rs.getString("name")});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void clearMedicineFields() {
        medicineidTxt.setText("");
        nameTxt.setText("");
        companynameTxt.setText("");
        priceperunitTxt.setText("");
        manuDate.setDate(clearDate);
        expDate.setDate(clearDate);
        noofunitTxt.setText("");
        totalpriceTxt.setText("");
    }

    public String getUniqueId(String prefix) {
        return prefix + System.nanoTime();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        exitBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        searchTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        medicineTbl = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        medicineidTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        companynameTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        priceperunitTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        manuDate = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        expDate = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        noofunitTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        totalpriceTxt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        cartTbl = new javax.swing.JTable();
        addtocartBtn = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        finaltotalpriceTxt = new javax.swing.JTextField();
        purchaseandprintBtn = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Sell Medicine");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 10, -1, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 1366, 10));

        exitBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pms/Images/close.png"))); // NOI18N
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });
        getContentPane().add(exitBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1318, 13, 36, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pms/Images/search.png"))); // NOI18N
        jLabel2.setText("Search");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 92, -1, -1));

        searchTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        searchTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTxtActionPerformed(evt);
            }
        });
        searchTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTxtKeyReleased(evt);
            }
        });
        getContentPane().add(searchTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 130, 300, -1));

        medicineTbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        medicineTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine"
            }
        ));
        medicineTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                medicineTblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(medicineTbl);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 169, 300, 561));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Medicine Id");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(391, 95, 300, -1));

        medicineidTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(medicineidTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(391, 125, 300, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Name");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(391, 169, 300, -1));

        nameTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTxtActionPerformed(evt);
            }
        });
        getContentPane().add(nameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(391, 203, 300, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Company Name");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(391, 242, 300, -1));

        companynameTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(companynameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(391, 291, 300, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Price Per Unit");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(709, 92, 300, -1));

        priceperunitTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(priceperunitTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(709, 125, 300, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Manufactured Date");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(709, 169, 300, -1));

        manuDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(manuDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(709, 202, 300, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Expiry Date");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(709, 242, 300, -1));

        expDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(expDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(709, 290, 300, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("No. of Units");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1027, 92, 300, -1));

        noofunitTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        noofunitTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noofunitTxtActionPerformed(evt);
            }
        });
        noofunitTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                noofunitTxtKeyReleased(evt);
            }
        });
        getContentPane().add(noofunitTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1027, 125, 300, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Total Price");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1027, 169, 300, -1));

        totalpriceTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(totalpriceTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1027, 203, 300, -1));

        cartTbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cartTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine Id", "Name", "Company Name", "Price Per Unit", "No. of Units", "Expiry Date", "Total Price"
            }
        ));
        cartTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cartTblMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(cartTbl);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(391, 330, 936, 320));

        addtocartBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addtocartBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pms/Images/add to cart.png"))); // NOI18N
        addtocartBtn.setText("Add to Cart");
        addtocartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtocartBtnActionPerformed(evt);
            }
        });
        getContentPane().add(addtocartBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1118, 262, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel11.setText("Total Amount");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(697, 696, -1, -1));

        finaltotalpriceTxt.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        finaltotalpriceTxt.setText("000");
        getContentPane().add(finaltotalpriceTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(877, 693, -1, -1));

        purchaseandprintBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        purchaseandprintBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pms/Images/generate bill & print.png"))); // NOI18N
        purchaseandprintBtn.setText("Purchase & Print");
        purchaseandprintBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseandprintBtnActionPerformed(evt);
            }
        });
        getContentPane().add(purchaseandprintBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1168, 701, -1, -1));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pms/Images/background.jpg"))); // NOI18N
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_exitBtnActionPerformed

    private void searchTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTxtActionPerformed

    private void nameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTxtActionPerformed

    private void noofunitTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noofunitTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noofunitTxtActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        medicineName("");
        medicineidTxt.setEditable(false);
        nameTxt.setEditable(false);
        companynameTxt.setEditable(false);
        priceperunitTxt.setEditable(false);
        manuDate.setEnabled(false);
        expDate.setEnabled(false);
        totalpriceTxt.setEditable(false);
    }//GEN-LAST:event_formComponentShown

    private void searchTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTxtKeyReleased
        // TODO add your handling code here:
        String search = searchTxt.getText();
        medicineName(search);
    }//GEN-LAST:event_searchTxtKeyReleased

    private void medicineTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medicineTblMouseClicked
        // TODO add your handling code here:
        int index = medicineTbl.getSelectedRow();
        TableModel model = medicineTbl.getModel();
        String nameOruniqueId = model.getValueAt(index, 0).toString();
        String uniqueId[] = nameOruniqueId.split("-", 0);
        try {
            Connection con = ConnectionProvider.getConnection();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM medicine WHERE uniqueId='" + uniqueId[0] + "'");
            while (rs.next()) {
                medicineidTxt.setText(rs.getString("uniqueId"));
                nameTxt.setText(rs.getString("name"));
                companynameTxt.setText(rs.getString("companyName"));
                priceperunitTxt.setText(rs.getString("price"));
                manuDate.setDate(rs.getDate("manufacturedDate"));
                expDate.setDate(rs.getDate("expiryDate"));
                noofunitTxt.setText("");
                totalpriceTxt.setText("");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_medicineTblMouseClicked

    private void addtocartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtocartBtnActionPerformed
        // TODO add your handling code here:
        String noofunits = noofunitTxt.getText();
        String uniqueId = medicineidTxt.getText();

        if (!noofunits.equals("") && !uniqueId.equals("")) {
            String name = nameTxt.getText();
            String companyName = companynameTxt.getText();
            String priceperunit = priceperunitTxt.getText();
            Date expiryDate = expDate.getDate();
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM");
            String formattedexpiryDate = dateFormat.format(expiryDate);
            String totalPrice = totalpriceTxt.getText();
            int checkStock = 0;
            int checkMedicineAlreadyExistInCart = 0;
            try {
                Connection con = ConnectionProvider.getConnection();
                Statement stockCheckStatement = con.createStatement();
                ResultSet rs = stockCheckStatement.executeQuery("SELECT * FROM medicine WHERE uniqueId='"+uniqueId+"'");
                while (rs.next()) {
                    if (rs.getInt("quantity") >= Integer.parseInt(noofunits)) {
                        checkStock = 1;
                        break;
                    } else {
                        JOptionPane.showMessageDialog(null, "Medicine is out of stock, Only " + rs.getInt("quantity") + " left.");
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
//            System.out.println(checkStock);
            if (checkStock == 1) {
                DefaultTableModel dtm = (DefaultTableModel) cartTbl.getModel();
                if (cartTbl.getRowCount() != 0) {
                    for (int i = 0; i < dtm.getRowCount(); i++) {
                        if (Integer.parseInt(dtm.getValueAt(i, 0).toString()) == Integer.parseInt(uniqueId)) {
                            checkMedicineAlreadyExistInCart = 1;
                            JOptionPane.showMessageDialog(null, "Medicine already exists in cart.");
                        }
                    }
                }
                if (checkMedicineAlreadyExistInCart == 0) {
                    dtm.addRow(new Object[]{uniqueId, name, companyName, priceperunit, noofunits, formattedexpiryDate, totalPrice});
                    finalTotalPrice += Integer.parseInt(totalPrice);
                    finaltotalpriceTxt.setText(String.valueOf(finalTotalPrice));
                    JOptionPane.showMessageDialog(null, "Added successfully");
                }
                clearMedicineFields();
            }
        } else {
            JOptionPane.showMessageDialog(null, "No of units and Medicine Id field are required.");
        }
    }//GEN-LAST:event_addtocartBtnActionPerformed

    private void noofunitTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_noofunitTxtKeyReleased
        // TODO add your handling code here:
        String noofunits = noofunitTxt.getText();
        if (!noofunits.equals("")) {
            String price = priceperunitTxt.getText();
            if (!noofunits.matches(numberPattern)) {
                JOptionPane.showMessageDialog(null, "Number of Units field is invalid.");
            }
            int totalPrice = Integer.parseInt(noofunits) * Integer.parseInt(price);
            totalpriceTxt.setText(String.valueOf(totalPrice));
        } else {
            totalpriceTxt.setText("");
        }
    }//GEN-LAST:event_noofunitTxtKeyReleased

    private void cartTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cartTblMouseClicked
        // TODO add your handling code here:
        int index = cartTbl.getSelectedRow();
        int a = JOptionPane.showConfirmDialog(null, "Do you wnat to remove this medicine?", "Select", JOptionPane.YES_NO_OPTION);
        if (a == 0) {
            TableModel model = cartTbl.getModel();
            String total = model.getValueAt(index, 6).toString();
            finalTotalPrice = finalTotalPrice - Integer.parseInt(total);
            finaltotalpriceTxt.setText(String.valueOf(finalTotalPrice));
            ((DefaultTableModel) cartTbl.getModel()).removeRow(index);
        }
    }//GEN-LAST:event_cartTblMouseClicked

    private void purchaseandprintBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseandprintBtnActionPerformed
        // TODO add your handling code here:
        if (finalTotalPrice != 0) {
            billId = getUniqueId("Bill-");

            DefaultTableModel dtm = (DefaultTableModel) cartTbl.getModel();
            if (cartTbl.getRowCount() != 0) {
                for (int i = 0; i < cartTbl.getRowCount(); i++) {
                    try {
                        Connection con = ConnectionProvider.getConnection();
                        Statement st = con.createStatement();
                        st.executeUpdate("UPDATE medicine SET quantity = quantity-" + Integer.parseInt(dtm.getValueAt(i, 4).toString()) + " WHERE uniqueId='" + Integer.parseInt(dtm.getValueAt(i, 0).toString()) + "'");
                        PreparedStatement ps = con.prepareStatement("INSERT into bill_detail VALUES (?,?,?,?,?,?)");
                        ps.setString(1, billId);
                        ps.setString(2, "" + dtm.getValueAt(i, 1));
                        ps.setInt(3, Integer.parseInt(dtm.getValueAt(i, 3).toString()));
                        ps.setInt(4, Integer.parseInt(dtm.getValueAt(i, 4).toString()));
                        String dateString = (String) dtm.getValueAt(i, 5);
                        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM");
                        Date utilDate = dateFormat.parse(dateString);
                        java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
                        ps.setDate(5, sqlDate);
                        ps.setInt(6, Integer.parseInt(dtm.getValueAt(i, 6).toString()));
                        ps.executeUpdate();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }
                }
            }
            try {
                LocalDate today = LocalDate.now();
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                String formattedDate = today.format(formatter);
                Connection con = ConnectionProvider.getConnection();
                PreparedStatement ps = con.prepareStatement("INSERT INTO bill(billId,billDate,totalPaid,generatedBy) VALUES(?,?,?,?)");
                ps.setString(1, billId);
                ps.setString(2, formattedDate);
                ps.setInt(3, finalTotalPrice);
                ps.setString(4, username);
                ps.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            //create bill
            com.itextpdf.text.Document doc = new com.itextpdf.text.Document();
            try {
                PdfWriter.getInstance(doc, new FileOutputStream(PharmacyUtils.billPath + "" + billId + ".pdf"));
                doc.open();
                Paragraph pharmacyName = new Paragraph("                                                 Bajra Pharmacy\n");
                doc.add(pharmacyName);
                Paragraph starLine = new Paragraph("************************************************************************************\n");
                doc.add(starLine);
                Paragraph details = new Paragraph("\tBill Id: " + billId + "\nDate: " + new Date() + "\nTotal Paid: " + finalTotalPrice);
                doc.add(details);
                doc.add(starLine);
                PdfPTable tb1 = new PdfPTable(6);
                tb1.addCell("Medicine Id");
                tb1.addCell("Name");
                tb1.addCell("Company Name");
                tb1.addCell("Price Per Unit");
                tb1.addCell("No. of Unit");
                tb1.addCell("Total Price");
                for (int i = 0; i < cartTbl.getRowCount(); i++) {
                    String a = cartTbl.getValueAt(i, 0).toString();
                    String b = cartTbl.getValueAt(i, 1).toString();
                    String c = cartTbl.getValueAt(i, 2).toString();
                    String d = cartTbl.getValueAt(i, 3).toString();
                    String e = cartTbl.getValueAt(i, 4).toString();
                    String f = cartTbl.getValueAt(i, 5).toString();
                    tb1.addCell(a);
                    tb1.addCell(b);
                    tb1.addCell(c);
                    tb1.addCell(d);
                    tb1.addCell(e);
                    tb1.addCell(f);
                }
                doc.add(tb1);
                doc.add(starLine);
                Paragraph thanksMsg = new Paragraph("Thank you. Please Visit Again");
                doc.add(thanksMsg);
                //Open pdf
                OpenPdf.openById(String.valueOf(billId));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            doc.close();
            setVisible(false);
            new SellMedicine(username).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Please add some medicine to the cart");
        }
    }//GEN-LAST:event_purchaseandprintBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SellMedicine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addtocartBtn;
    private javax.swing.JTable cartTbl;
    private javax.swing.JTextField companynameTxt;
    private javax.swing.JButton exitBtn;
    private com.toedter.calendar.JDateChooser expDate;
    private javax.swing.JTextField finaltotalpriceTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private com.toedter.calendar.JDateChooser manuDate;
    private javax.swing.JTable medicineTbl;
    private javax.swing.JTextField medicineidTxt;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JTextField noofunitTxt;
    private javax.swing.JTextField priceperunitTxt;
    private javax.swing.JButton purchaseandprintBtn;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JTextField totalpriceTxt;
    // End of variables declaration//GEN-END:variables
}
