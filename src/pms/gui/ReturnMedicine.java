/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pms.gui;

import dao.ConnectionProvider;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author DELL
 */
public class ReturnMedicine extends javax.swing.JFrame {

    /**
     * Creates new form ReturnMedicine
     */
    public String numberPattern = "^[0-9]*$";

    public ReturnMedicine() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        closeBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        searchbillidTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        searchDate = new com.toedter.calendar.JDateChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        searchbillTbl = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        quantityTxt = new javax.swing.JTextField();
        updateBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        medicineTbl = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        returnedquantityTxt = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        pricetoreturnTxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        priceperunitTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Medicine Return");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(544, 13, -1, -1));

        closeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pms/Images/close.png"))); // NOI18N
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });
        getContentPane().add(closeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1319, 13, 36, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pms/Images/search.png"))); // NOI18N
        jLabel5.setText("Search");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(147, 92, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Bill Id");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 132, -1, -1));

        searchbillidTxt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchbillidTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbillidTxtActionPerformed(evt);
            }
        });
        searchbillidTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchbillidTxtKeyReleased(evt);
            }
        });
        getContentPane().add(searchbillidTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 162, 340, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Date");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 202, -1, -1));

        searchDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchDate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                searchDatePropertyChange(evt);
            }
        });
        getContentPane().add(searchDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 232, 340, -1));

        searchbillTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bill Id", "Date", "Total Paid", "Generated By"
            }
        ));
        searchbillTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchbillTblMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(searchbillTbl);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(385, 92, 970, 200));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 1367, 10));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 1367, 10));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Name");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(268, 540, 300, -1));

        nameTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(nameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(268, 575, 300, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Quantity");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(586, 540, 300, -1));

        quantityTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(quantityTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(586, 575, 300, -1));

        updateBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pms/Images/save.png"))); // NOI18N
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        getContentPane().add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(913, 621, 125, 40));

        medicineTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine Name", "Price Per Unit", "Quantity", "Expiry Date", "Total Paid"
            }
        ));
        medicineTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                medicineTblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(medicineTbl);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 338, 1328, 156));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Returned Quantity");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(268, 631, -1, 21));

        returnedquantityTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        returnedquantityTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnedquantityTxtActionPerformed(evt);
            }
        });
        returnedquantityTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                returnedquantityTxtKeyReleased(evt);
            }
        });
        getContentPane().add(returnedquantityTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(268, 668, 300, -1));
        getContentPane().add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 512, 1367, 10));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Price To Return");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(586, 633, -1, -1));

        pricetoreturnTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        pricetoreturnTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pricetoreturnTxtActionPerformed(evt);
            }
        });
        getContentPane().add(pricetoreturnTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(586, 668, 300, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Price Per Unit");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(913, 540, -1, -1));

        priceperunitTxt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(priceperunitTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(913, 575, 300, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pms/Images/background.jpg"))); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void searchBill(String search) {
        DefaultTableModel model = (DefaultTableModel) searchbillTbl.getModel();
        model.setRowCount(0);
        try {
            Connection con = ConnectionProvider.getConnection();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM bill WHERE billId LIKE '" + search + "%'");
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("billId"), rs.getString("billDate"), rs.getString("totalPaid"), rs.getString("generatedBy")});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private int getCurrentQuantity(String name) {
        try {
            Connection con = ConnectionProvider.getConnection();
            PreparedStatement ps = con.prepareStatement("SELECT * FROM medicine WHERE name=?");
            ps.setString(1, name);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                return rs.getInt("quantity");
            } else {
                // Medicine with the given unique ID not found
                JOptionPane.showMessageDialog(null, "Medicine not found.");
                return 0;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
            System.out.println(e);
            return 0;

        }
    }
    private void searchbillidTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbillidTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchbillidTxtActionPerformed

    private void searchbillidTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchbillidTxtKeyReleased
        // TODO add your handling code here:
        String billid = searchbillidTxt.getText();
        searchBill(billid);
    }//GEN-LAST:event_searchbillidTxtKeyReleased

    private void searchDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_searchDatePropertyChange
        // TODO add your handling code here:
        //        Date selectedDate = searchDate.getDate();
        //        DefaultTableModel model = (DefaultTableModel) serachTable.getModel();
        //        model.setRowCount(0);
        //        try {
        //            Connection con = ConnectionProvider.getConnection();
        //            String query = "SELECT * FROM bill WHERE billdate = ?";
        //            PreparedStatement statement = con.prepareStatement(query);
        //            statement.setDate(1, new java.sql.Date(selectedDate.getTime()));
        //            ResultSet rs = statement.executeQuery();
        //            while (rs.next()) {
        //                model.addRow(new Object[]{rs.getString("billId"), rs.getString("billDate"), rs.getString("totalPaid"), rs.getString("generatedBy")});
        //            }
        //        } catch (Exception e) {
        //            JOptionPane.showMessageDialog(null, e);
        //        }
    }//GEN-LAST:event_searchDatePropertyChange

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        int index = searchbillTbl.getSelectedRow();
        TableModel model = searchbillTbl.getModel();
        String id = model.getValueAt(index, 0).toString();
        String name = nameTxt.getText();
        System.out.println(id+""+name);
        int currentquantity = getCurrentQuantity(name);
        int returnquantity = Integer.parseInt(returnedquantityTxt.getText());
        int totalQuantity = 0;
        if (returnquantity == 0) {
            totalQuantity = currentquantity;
        } else {
            totalQuantity = currentquantity + returnquantity;
            System.out.println("" + totalQuantity);
        }
        try {
            Connection con = ConnectionProvider.getConnection();
            PreparedStatement ps1 = con.prepareStatement("UPDATE medicine SET quantity=? WHERE name=?");
            ps1.setString(1, "" + totalQuantity);
            ps1.setString(2, name);
            ps1.executeUpdate();
            int oldbillquantity = Integer.parseInt(quantityTxt.getText());
            int newbillquantity = oldbillquantity - returnquantity;
            System.out.println(newbillquantity);
            if (newbillquantity <= 0) {
                PreparedStatement ps3 = con.prepareStatement("DELETE FROM bill_detail WHERE medicine_name=? AND billId=? ");
                ps3.setString(1, name);
                ps3.setString(2, id);
                ps3.executeUpdate();
            } else {
                PreparedStatement ps2 = con.prepareStatement("UPDATE bill_detail SET quantity=? WHERE medicine_name=?");
                ps2.setInt(1, newbillquantity);
                ps2.setString(2, name);
                ps2.executeUpdate();
            }
            PreparedStatement ps4 = con.prepareStatement("SELECT * FROM bill_detail WHERE billId=?");
            ps4.setString(1, id);
            ResultSet rs = ps4.executeQuery();
            int countquantity = 0;
            while (rs.next()) {
                countquantity = countquantity + rs.getInt("quantity");
            }
            if (countquantity <= 0) {
                PreparedStatement ps5 = con.prepareStatement("DELETE FROM bill WHERE billId=?");
                ps5.setString(1, id);
                ps5.executeUpdate();
            }
            JOptionPane.showMessageDialog(null, "Medicine updated successfully");
            setVisible(false);
            new ReturnMedicine().setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_closeBtnActionPerformed

    private void searchbillTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchbillTblMouseClicked
        // TODO add your handling code here:
        int index = searchbillTbl.getSelectedRow();
        TableModel model = searchbillTbl.getModel();
        String id = model.getValueAt(index, 0).toString();
        try {
            Connection con = ConnectionProvider.getConnection();
            PreparedStatement ps = con.prepareStatement("SELECT medicine_name, quantity, priceperunit, expirydate, totalpaid FROM bill_detail WHERE billId=?");
            ps.setString(1, id);
            ResultSet rs = ps.executeQuery();
            DefaultTableModel model1 = (DefaultTableModel) medicineTbl.getModel();
            model1.setRowCount(0);
            while (rs.next()) {
                model1.addRow(new Object[]{rs.getString("medicine_name"), rs.getInt("priceperunit"), rs.getInt("quantity"), rs.getDate("expiryDate"), rs.getInt("totalpaid")});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_searchbillTblMouseClicked

    private void medicineTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medicineTblMouseClicked
        // TODO add your handling code here:
        int index = medicineTbl.getSelectedRow();
        TableModel model = medicineTbl.getModel();
        String name = model.getValueAt(index, 0).toString();
        int quantity = Integer.parseInt(model.getValueAt(index, 2).toString());
        int price = Integer.parseInt(model.getValueAt(index, 1).toString());
        nameTxt.setText(name);
        quantityTxt.setText("" + quantity);
        priceperunitTxt.setText("" + price);
    }//GEN-LAST:event_medicineTblMouseClicked

    private void returnedquantityTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnedquantityTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_returnedquantityTxtActionPerformed

    private void pricetoreturnTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pricetoreturnTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pricetoreturnTxtActionPerformed

    private void returnedquantityTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_returnedquantityTxtKeyReleased
        // TODO add your handling code here:
        int returnquantity = Integer.parseInt(returnedquantityTxt.getText());
        int price = Integer.parseInt(priceperunitTxt.getText());
        int pricetoreturn = returnquantity * price;
        pricetoreturnTxt.setText("" + pricetoreturn);
    }//GEN-LAST:event_returnedquantityTxtKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReturnMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReturnMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReturnMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReturnMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReturnMedicine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable medicineTbl;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JTextField priceperunitTxt;
    private javax.swing.JTextField pricetoreturnTxt;
    private javax.swing.JTextField quantityTxt;
    private javax.swing.JTextField returnedquantityTxt;
    private com.toedter.calendar.JDateChooser searchDate;
    private javax.swing.JTable searchbillTbl;
    private javax.swing.JTextField searchbillidTxt;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
